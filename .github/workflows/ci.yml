name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Set Up Environment Variables
        run: |
          # auth-api
          echo "ACCESS_TOKEN_SECRET=test_access_secret" >> auth-api/src/.env.test
          echo "REFRESH_TOKEN_SECRET=test_refresh_secret" >> auth-api/src/.env.test
          echo "MONGO_URL=${{ secrets.TEST_MONGO_URL }}" >> auth-api/src/.env.test
          echo "REDIS_HOST=${{ secrets.TEST_REDIS_HOST }}" >> auth-api/src/.env.test
          echo "REDIS_PORT=${{ secrets.TEST_REDIS_PORT }}" >> auth-api/src/.env.test
          echo "REDIS_DB=1" >> auth-api/src/.env.test
          # main-api
          echo "ACCESS_TOKEN_SECRET=test_access_secret" >> main-api/src/.env.test
          echo "REFRESH_TOKEN_SECRET=test_refresh_secret" >> main-api/src/.env.test
          echo "MONGO_URL=${{ secrets.TEST_MONGO_URL }}" >> main-api/src/.env.test
          echo "REDIS_HOST=${{ secrets.TEST_REDIS_HOST }}" >> main-api/src/.env.test
          echo "REDIS_PORT=${{ secrets.TEST_REDIS_PORT }}" >> main-api/src/.env.test
          echo "REDIS_DB=1" >> main-api/src/.env.test
          # Nextjs-app
          echo "NEXT_PUBLIC_APP_URL=${{ secrets.TEST_APP_URL }}" >> nextjs-app/.env.test
          echo "NEXT_PUBLIC_MAIN_API_URL=${{ secrets.TEST_MAIN_API_URL }}" >> nextjs-app/.env.test
          echo "NEXT_PUBLIC_AUTH_API_URL=${{ secrets.TEST_AUTH_API_URL }}" >> nextjs-app/.env.test

      - name: Build services
        run: |
          docker compose -f docker-compose.test.yaml up --build -d

      - name: Run auth api tests
        run: |
          docker exec -i auth-api npm test

      - name: Run main api tests
        run: |
          docker exec -i main-api npm test

      - name: Run App Tests
        run: |
          sleep 15
          docker exec -i nextjs-app npm test
          mkdir ${{ github.workspace }}/playwright-report
          docker cp nextjs-app:/app/playwright-report ${{ github.workspace }}/playwright-report

      - name: debug
        run: |
          ls ${{ github.workspace }}
          ls ${{ github.workspace }}/playwright-report
      
      - name: Upload trace artifacts
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report
          include-hidden-files: true
          retention-days: 30

      - name: Tear down services
        run: |
          docker compose -f docker-compose.test.yaml down
