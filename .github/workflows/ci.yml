name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          cd backend
          npm install

      - name: Start Backend Server
        env:
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
          AI_KEY: ${{ secrets.AI_KEY }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
        run: |
          cd backend/src
          node index
          sleep 10      # Wait for the server to be fully up

      - name: Run Tests
        run: |
          cd backend
          npm test

  build-frontend:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          cd frontend
          npm install
          cd ../backend
          npm install

      - name: Set Up Environment Variables
        run: echo "MONGO_URI=mongodb://localhost:27017/test" > .env
          
      - name: Start Backend Server
        env:
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
          AI_KEY: ${{ secrets.AI_KEY }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
        run: |
          cd backend/src
          node index
          sleep 10      # Wait for the server to be fully up

      - name: Build
        run: |
          cd frontend
          npm run build

      - name: Start app
        env:
          NODE_API_URL: ${{ secrets.NODE_API_URL }}
          NODE_AUTH_API_URL: ${{ secrets.NODE_AUTH_API_URL }}
          IS_DEPLOYED: ${{ secrets.IS_DEPLOYED }}
        run: |
          cd frontend
          npm run start
          sleep 10      # Wait for the app to be fully up
          
      - name: Run Tests
        run: |
          cd frontend
          npx cypress run
